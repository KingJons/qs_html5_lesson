html{
    font-size: 10px;
    background: url(./images/bg.jpg); 
    /* css3背景  */
    /* 多屏时代 电脑 手机 ipad 访问同一个资源 */
    /* 一张图片在不同的设备上招募做背景呢 */
    /* 盒子的大小和图片的关系 */
    /* cover 裁剪 按照容器大小裁剪 等比例放大缩小图片，
    填充满整个容器，超过部分裁剪掉，保证容器填满，
    最重要的图片部分显示出来*/
    background-size: cover;

}
body,html{
    margin: 0; /* css reset */
    padding: 0;
    font-family: sans-serif;
}
.keys{
    /* 弹性布局 */
    display: flex;
    /* vh 相对单位，相对于我们的视窗 */
    /* 手机都是100vh */
    min-height: 100vh;
    /* 专属于弹性布局的纵轴对齐方式 */
    align-items: center;
    /* 专属于弹性布局的横轴对齐方式 */   
    justify-content: center;

}
.key{
    color: #ffffff;
    text-align: center;
    width: 10rem;
    border: .4rem solid #000;
    border-radius: .5rem;
    margin: 1rem;
    font-size: 1.5rem;
    padding: 1rem .5rem;
    /* css 效果过渡动画 */
    transition: all .07s ease;
}
.key div{
    font-size: 4rem;
}
.sound{
    /*rem 是一个相对单位 px
    px 在多端时代行不通
    手机的像素密度是不同的 retino 三倍retino
    px 不可靠
    rem 相对html font-size 等比例计算
     1.2rem * 10px(参照htmlfont-size 的大小) = 12px */
    font-size: 1.2rem;
    /* 字变成大写 */
    text-transform: uppercase;
    /* 字间距 */
    letter-spacing: .1rem;
    color: #ffc600;
    box-shadow: 0 0 .5rem black;
}
.playing{
    /* 转换样式 移动 缩放 旋转 */
    transform: scale(1.1); /*放大1.1 */
    border-color: #ffc600;
    box-shadow: 0 0 1rem #ffc600;
}